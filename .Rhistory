kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos clusters nos grupos', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Group'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
data %>%
group_by(cluster) %>%
summarise(across(everything(), list(mean = mean))) %>%
ungroup %>%
mutate(across(where(is.numeric), round, 2)) %>%
transpose_df %>%
header.true %>%
mutate(Variable = gsub("\\_.*","", cluster)) %>%
select(Variable, `Cluster 1`, `Cluster 2`, `Cluster 3`, `Cluster 4`, `Cluster 5`) %>%
niceFormatting(caption = 'Médias das variáveis por cluster') %>%
print
}
niceFormatting = function(df, caption="", digits = 2, font_size = NULL, label = 1){
df %>%
kbl(booktabs = T, longtable = T, caption = caption,
digits = digits, format = "latex", label = label) %>%
kable_styling(font_size = font_size,
latex_options = c("striped", "HOLD_position", "repeat_header"))
}
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
data <- data_raw %>% select(-all_of(remove_columns))
fviz_nbclust(data, kmeans, method = "wss") +
geom_vline(xintercept = K, linetype = 2)
km.res <- kmeans(data, K, iter.max = 50, nstart = 20)
tibble(Cluster = seq(1:K),
`Sum of Squares` = km.res$withinss) %>%
niceFormatting(caption = "Within-cluster sum of squares")
evaluate_cluster(km.res$cluster)
# fviz_cluster(km.res, data = data,
#              palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
#              geom = "point",
#              ellipse.type = "convex",
#              ggtheme = theme_bw()
#              )
knitr::opts_chunk$set(
echo = F,
warning = F
)
library(tidyverse)
library(readxl)
library(factoextra)
library(scales)
library(kableExtra)
data_raw <- read_excel('dataset/Planilha_dados_Clusterização_CD_RC_enviada_alterado.xlsx')
data_raw <- data_raw %>% mutate(group = paste0('Group ', group))
remove_columns <- c('record_id', 'group')
K <- 4
paste_matrix <- function(...,sep = " ", collapse = NULL) {
n <- max(sapply(list(...),nrow))
p <- max(sapply(list(...),ncol))
matrix(paste(...,sep = sep,collapse = collapse),n,p)
}
percent <- function(x) paste0("(", lapply(x, as.character), "%)")
addpercentage <- function(df) {
x <- df %>%
prop.table(margin = 1) %>%
addmargins(FUN = list(Total = sum), quiet = TRUE) %>%
round(2) * 100
x[nrow(x),] <- " "
x[-(nrow(x)),] <- lapply(x[-(nrow(x)), ], percent)
y <- matrix(x, nrow = nrow(df) + 1)
df <- df %>%
addmargins(FUN = list(Total = sum), quiet = TRUE)
df_final <- paste_matrix(df, y)
rownames(df_final) <- rownames(df)
colnames(df_final) <- colnames(df)
return(df_final)
}
evaluate_cluster <- function(clusters) {
data <- cbind(data, cluster = clusters) %>%
mutate(cluster = factor(paste0('Cluster ', cluster)))
table(data_raw$group, data$cluster) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Group') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos grupos nos clusters', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Cluster'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
table(data$cluster, data_raw$group) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Cluster') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos clusters nos grupos', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Group'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
data %>%
group_by(cluster) %>%
summarise(across(everything(), list(mean = mean))) %>%
ungroup %>%
mutate(across(where(is.numeric), round, 2)) %>%
transpose_df %>%
header.true %>%
mutate(Variable = gsub("\\_.*","", cluster)) %>%
select(Variable, `Cluster 1`, `Cluster 2`, `Cluster 3`, `Cluster 4`, `Cluster 5`) %>%
niceFormatting(caption = 'Médias das variáveis por cluster') %>%
print
}
niceFormatting = function(df, caption="", digits = 2, font_size = NULL, label = 1){
df %>%
kbl(booktabs = T, longtable = T, caption = caption,
digits = digits, format = "latex", label = label) %>%
kable_styling(font_size = font_size,
latex_options = c("striped", "HOLD_position", "repeat_header"))
}
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
data <- data_raw %>% select(-all_of(remove_columns))
fviz_nbclust(data, kmeans, method = "wss") +
geom_vline(xintercept = K, linetype = 2)
km.res <- kmeans(data, K, iter.max = 50, nstart = 20)
tibble(Cluster = seq(1:K),
`Sum of Squares` = km.res$withinss) %>%
niceFormatting(caption = "Within-cluster sum of squares")
evaluate_cluster(km.res$cluster)
knitr::opts_chunk$set(
echo = F,
warning = F
)
library(tidyverse)
library(readxl)
library(factoextra)
library(scales)
library(kableExtra)
data_raw <- read_excel('dataset/Planilha_dados_Clusterização_CD_RC_enviada_alterado.xlsx')
data_raw <- data_raw %>% mutate(group = paste0('Group ', group))
remove_columns <- c('record_id', 'group')
K <- 4
paste_matrix <- function(...,sep = " ", collapse = NULL) {
n <- max(sapply(list(...),nrow))
p <- max(sapply(list(...),ncol))
matrix(paste(...,sep = sep,collapse = collapse),n,p)
}
percent <- function(x) paste0("(", lapply(x, as.character), "%)")
addpercentage <- function(df) {
x <- df %>%
prop.table(margin = 1) %>%
addmargins(FUN = list(Total = sum), quiet = TRUE) %>%
round(2) * 100
x[nrow(x),] <- " "
x[-(nrow(x)),] <- lapply(x[-(nrow(x)), ], percent)
y <- matrix(x, nrow = nrow(df) + 1)
df <- df %>%
addmargins(FUN = list(Total = sum), quiet = TRUE)
df_final <- paste_matrix(df, y)
rownames(df_final) <- rownames(df)
colnames(df_final) <- colnames(df)
return(df_final)
}
evaluate_cluster <- function(clusters) {
data <- cbind(data, cluster = clusters) %>%
mutate(cluster = factor(paste0('Cluster ', cluster)))
table(data_raw$group, data$cluster) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Group') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos grupos nos clusters', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Cluster'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
table(data$cluster, data_raw$group) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Cluster') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos clusters nos grupos', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Group'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
data %>%
group_by(cluster) %>%
summarise(across(everything(), list(mean = mean))) %>%
ungroup %>%
mutate(across(where(is.numeric), round, 2)) %>%
transpose_df %>%
header.true %>%
mutate(Variable = gsub("\\_.*","", cluster)) %>%
select(Variable, `Cluster 1`, `Cluster 2`, `Cluster 3`, `Cluster 4`) %>%
niceFormatting(caption = 'Médias das variáveis por cluster') %>%
print
}
niceFormatting = function(df, caption="", digits = 2, font_size = NULL, label = 1){
df %>%
kbl(booktabs = T, longtable = T, caption = caption,
digits = digits, format = "latex", label = label) %>%
kable_styling(font_size = font_size,
latex_options = c("striped", "HOLD_position", "repeat_header"))
}
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
data <- data_raw %>% select(-all_of(remove_columns))
fviz_nbclust(data, kmeans, method = "wss") +
geom_vline(xintercept = K, linetype = 2)
km.res <- kmeans(data, K, iter.max = 50, nstart = 20)
tibble(Cluster = seq(1:K),
`Sum of Squares` = km.res$withinss) %>%
niceFormatting(caption = "Within-cluster sum of squares")
evaluate_cluster(km.res$cluster)
# fviz_cluster(km.res, data = data,
#              palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
#              geom = "point",
#              ellipse.type = "convex",
#              ggtheme = theme_bw()
#              )
knitr::opts_chunk$set(
echo = F,
warning = F
)
library(tidyverse)
library(readxl)
library(factoextra)
library(scales)
library(kableExtra)
data_raw <- read_excel('dataset/Planilha_dados_Clusterização_CD_RC_enviada_alterado.xlsx')
data_raw <- data_raw %>% mutate(group = paste0('Group ', group))
remove_columns <- c('record_id', 'group')
K <- 5
paste_matrix <- function(...,sep = " ", collapse = NULL) {
n <- max(sapply(list(...),nrow))
p <- max(sapply(list(...),ncol))
matrix(paste(...,sep = sep,collapse = collapse),n,p)
}
percent <- function(x) paste0("(", lapply(x, as.character), "%)")
addpercentage <- function(df) {
x <- df %>%
prop.table(margin = 1) %>%
addmargins(FUN = list(Total = sum), quiet = TRUE) %>%
round(2) * 100
x[nrow(x),] <- " "
x[-(nrow(x)),] <- lapply(x[-(nrow(x)), ], percent)
y <- matrix(x, nrow = nrow(df) + 1)
df <- df %>%
addmargins(FUN = list(Total = sum), quiet = TRUE)
df_final <- paste_matrix(df, y)
rownames(df_final) <- rownames(df)
colnames(df_final) <- colnames(df)
return(df_final)
}
evaluate_cluster <- function(clusters) {
data <- cbind(data, cluster = clusters) %>%
mutate(cluster = factor(paste0('Cluster ', cluster)))
table(data_raw$group, data$cluster) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Group') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos grupos nos clusters', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Cluster'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
table(data$cluster, data_raw$group) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Cluster') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos clusters nos grupos', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Group'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
data %>%
group_by(cluster) %>%
summarise(across(everything(), list(mean = mean))) %>%
ungroup %>%
mutate(across(where(is.numeric), round, 2)) %>%
transpose_df %>%
header.true %>%
mutate(Variable = gsub("\\_.*","", cluster)) %>%
select(Variable, `Cluster 1`, `Cluster 2`, `Cluster 3`, `Cluster 4`, `Cluster 5`) %>%
niceFormatting(caption = 'Médias das variáveis por cluster') %>%
print
}
niceFormatting = function(df, caption="", digits = 2, font_size = NULL, label = 1){
df %>%
kbl(booktabs = T, longtable = T, caption = caption,
digits = digits, format = "latex", label = label) %>%
kable_styling(font_size = font_size,
latex_options = c("striped", "HOLD_position", "repeat_header"))
}
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
data <- data_raw %>% select(-all_of(remove_columns))
fviz_nbclust(data, kmeans, method = "wss") +
geom_vline(xintercept = K, linetype = 2)
km.res <- kmeans(data, K, iter.max = 50, nstart = 20)
tibble(Cluster = seq(1:K),
`Sum of Squares` = km.res$withinss) %>%
niceFormatting(caption = "Within-cluster sum of squares")
evaluate_cluster(km.res$cluster)
# fviz_cluster(km.res, data = data,
#              palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
#              geom = "point",
#              ellipse.type = "convex",
#              ggtheme = theme_bw()
#              )
data <- data_raw %>%
select(-all_of(remove_columns)) %>%
mutate(across(where(is.numeric), ~ as.numeric(scale(.))))
matrix_distance <- dist(data, method = "euclidean")
dista.hc <- hclust(d = matrix_distance, method = "ward.D")
fviz_dend(dista.hc, cex = 0.5)
evaluate_cluster(cutree(dista.hc, k = K))
data <- data_raw %>%
select(-all_of(remove_columns)) %>%
mutate(across(where(is.numeric), ~ as.numeric(scale(.))))
matrix_distance <- dist(data, method = "euclidean")
dista.hc <- hclust(d = matrix_distance, method = "complete")
fviz_dend(dista.hc, cex = 0.5)
evaluate_cluster(cutree(dista.hc, k = K))
knitr::opts_chunk$set(
echo = F,
warning = F
)
library(tidyverse)
library(readxl)
library(factoextra)
library(scales)
library(kableExtra)
data_raw <- read_excel('dataset/Planilha_dados_Clusterização_CD_RC_enviada_alterado.xlsx')
data_raw <- data_raw %>% mutate(group = paste0('Group ', group))
remove_columns <- c('record_id', 'group')
K <- 4
paste_matrix <- function(...,sep = " ", collapse = NULL) {
n <- max(sapply(list(...),nrow))
p <- max(sapply(list(...),ncol))
matrix(paste(...,sep = sep,collapse = collapse),n,p)
}
percent <- function(x) paste0("(", lapply(x, as.character), "%)")
addpercentage <- function(df) {
x <- df %>%
prop.table(margin = 1) %>%
addmargins(FUN = list(Total = sum), quiet = TRUE) %>%
round(2) * 100
x[nrow(x),] <- " "
x[-(nrow(x)),] <- lapply(x[-(nrow(x)), ], percent)
y <- matrix(x, nrow = nrow(df) + 1)
df <- df %>%
addmargins(FUN = list(Total = sum), quiet = TRUE)
df_final <- paste_matrix(df, y)
rownames(df_final) <- rownames(df)
colnames(df_final) <- colnames(df)
return(df_final)
}
evaluate_cluster <- function(clusters) {
data <- cbind(data, cluster = clusters) %>%
mutate(cluster = factor(paste0('Cluster ', cluster)))
table(data_raw$group, data$cluster) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Group') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos grupos nos clusters', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Cluster'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
table(data$cluster, data_raw$group) %>%
addpercentage %>%
as.data.frame %>%
rownames_to_column(var = 'Cluster') %>%
kbl(align = "c", booktabs = T, digits = 2, format = 'latex',
caption = 'Distribuição dos clusters nos grupos', label = 1) %>%
row_spec(K, hline_after = T) %>%
column_spec(K + 1, border_right = T) %>%
collapse_rows(1, latex_hline = "none") %>%
add_header_above(c(' ' = 1,
setNames(K, 'Group'))) %>%
kable_styling(latex_options = c("HOLD_position", "repeat_header")) %>%
print
data %>%
group_by(cluster) %>%
summarise(across(everything(), list(mean = mean))) %>%
ungroup %>%
mutate(across(where(is.numeric), round, 2)) %>%
transpose_df %>%
header.true %>%
mutate(Variable = gsub("\\_.*","", cluster)) %>%
select(Variable, `Cluster 1`, `Cluster 2`, `Cluster 3`, `Cluster 4`) %>%
niceFormatting(caption = 'Médias das variáveis por cluster') %>%
print
}
niceFormatting = function(df, caption="", digits = 2, font_size = NULL, label = 1){
df %>%
kbl(booktabs = T, longtable = T, caption = caption,
digits = digits, format = "latex", label = label) %>%
kable_styling(font_size = font_size,
latex_options = c("striped", "HOLD_position", "repeat_header"))
}
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
data <- data_raw %>% select(-all_of(remove_columns))
fviz_nbclust(data, kmeans, method = "wss") +
geom_vline(xintercept = K, linetype = 2)
km.res <- kmeans(data, K, iter.max = 50, nstart = 20)
tibble(Cluster = seq(1:K),
`Sum of Squares` = km.res$withinss) %>%
niceFormatting(caption = "Within-cluster sum of squares")
evaluate_cluster(km.res$cluster)
# fviz_cluster(km.res, data = data,
#              palette = c("#2E9FDF", "#00AFBB", "#E7B800"),
#              geom = "point",
#              ellipse.type = "convex",
#              ggtheme = theme_bw()
#              )
data <- data_raw %>%
select(-all_of(remove_columns)) %>%
mutate(across(where(is.numeric), ~ as.numeric(scale(.))))
matrix_distance <- dist(data, method = "euclidean")
dista.hc <- hclust(d = matrix_distance, method = "ward.D")
fviz_dend(dista.hc, cex = 0.5)
evaluate_cluster(cutree(dista.hc, k = K))
evaluate_cluster(cutree(dista.hc, k = K))
var(cutree(dista.hc, k = K))
cutree(dista.hc, k = K)
source("C:/Users/p_mat/Documents/GitHub/BDMarcapasso/0-generator.R")
source("C:/Users/p_mat/Documents/GitHub/BDMarcapasso/0-generator.R")
source("C:/Users/p_mat/Documents/GitHub/BDMarcapasso/0-generator.R")
